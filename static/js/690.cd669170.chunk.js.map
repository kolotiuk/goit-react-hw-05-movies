{"version":3,"file":"static/js/690.cd669170.chunk.js","mappings":"kNA0BA,EAtBkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,0BACE,kBAAMC,SAPW,SAAAC,GACnBA,EAAEC,iBACFN,EAASE,EACV,EAIG,WACE,kBAAOK,KAAK,OAAOC,MAAON,EAAOF,SAZb,SAAAK,GACxBF,EAASE,EAAEI,OAAOD,MACnB,KAWK,mBAAQD,KAAK,SAAb,wBAIP,E,2BCeD,EAjCqB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MAChBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BX,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACJL,IACFM,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GACJ,IAAKA,EAAMC,OAGT,OAFAC,MAAM,qBACNN,EAAU,IAGZA,EAAUI,EACX,IACAG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,CAACZ,KAGF,wBACGG,EAAOM,OAAS,GACfN,EAAOY,KAAI,SAAAC,GAAE,OACX,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAMC,MAAO,CAAEC,KAAMnB,GAA7C,SACGe,EAAGK,SAFCL,EAAGE,GADD,KASpB,EChBD,EAhBe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAMnD,OACE,6BACE,SAAC,EAAD,CAAWpC,SANM,SAAAQ,GACnB0B,EAA0B,KAAV1B,EAAe,CAAE6B,OAAQ7B,GAAU,CAAC,EACrD,KAKG,SAAC,EAAD,CAAcE,MAAOyB,MAG1B,C,mKCjBDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAmB,WACvB,OAAOF,EAAAA,EAAAA,IAAA,sCAAyCC,IAAWtB,MAAK,YAC9D,OAD4E,EAAXwB,KACrDC,OACb,GACF,EAEK1B,EAAkB,SAAA2B,GACtB,OAAOL,EAAAA,EAAAA,IAAA,gCACyBC,EADzB,kBAC0CI,IAC9C1B,MAAK,YACJ,OADkB,EAAXwB,KACKC,OACb,GACJ,EAEKE,EAAkB,SAAAhB,GACtB,OAAOU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,oBAAkCW,IAAWtB,MAAK,YACvD,OADqE,EAAXwB,IAE3D,GACF,EAEKI,EAAkB,SAAAjB,GACtB,OAAOU,EAAAA,EAAAA,IAAA,iBACUV,EADV,4BACgCW,IACpCtB,MAAK,YACJ,OADkB,EAAXwB,KACKK,IACb,GACJ,EAEKC,EAAkB,SAAAnB,GACtB,OAAOU,EAAAA,EAAAA,IAAA,iBACUV,EADV,4BACgCW,IACpCtB,MAAK,YACJ,OADkB,EAAXwB,KACKC,OACb,GACJ,C","sources":["components/SearchBox/SearchBox.jsx","components/MoviesSearch/MoviesSearch.jsx","page/Movies/Movies.jsx","services/theMoviedbApi.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onChange }) => {\n  const [input, setInput] = useState('');\n\n  const handleChangeInput = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onChange(input);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={input} onChange={handleChangeInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'services/theMoviedbApi';\nimport PropTypes from 'prop-types';\n\nconst MoviesSearch = ({ query }) => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (query) {\n      getSearchMovies(query)\n        .then(movie => {\n          if (!movie.length) {\n            alert('No one films');\n            setMovies([]);\n            return;\n          }\n          setMovies(movie);\n        })\n        .catch(err => console.log(err));\n    }\n  }, [query]);\n\n  return (\n    <ul>\n      {movies.length > 0 &&\n        movies.map(el => (\n          <li key={el.id}>\n            <Link to={`/movies/${el.id}`} state={{ from: location }}>\n              {el.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MoviesSearch;\n\nMoviesSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesSearch from 'components/MoviesSearch/MoviesSearch';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterMovies = searchParams.get('filter') ?? '';\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  return (\n    <main>\n      <SearchBox onChange={changeFilter} />\n      <MoviesSearch query={filterMovies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '886a5e80a67d15e1eb52e12b03d8c581';\n\nconst getTrendingFilms = () => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}`).then(({ data }) => {\n    return data.results;\n  });\n};\n\nconst getSearchMovies = q => {\n  return axios\n    .get(`/search/movie?api_key=${API_KEY}&query=${q}`)\n    .then(({ data }) => {\n      return data.results;\n    });\n};\n\nconst getMovieDetails = id => {\n  return axios.get(`/movie/${id}?api_key=${API_KEY}`).then(({ data }) => {\n    return data;\n  });\n};\n\nconst getMovieCredits = id => {\n  return axios\n    .get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(({ data }) => {\n      return data.cast;\n    });\n};\n\nconst getMovieReviews = id => {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(({ data }) => {\n      return data.results;\n    });\n};\n\nexport {\n  getTrendingFilms,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getSearchMovies,\n};\n"],"names":["onChange","useState","input","setInput","onSubmit","e","preventDefault","type","value","target","query","location","useLocation","movies","setMovies","useEffect","getSearchMovies","then","movie","length","alert","catch","err","console","log","map","el","to","id","state","from","title","useSearchParams","searchParams","setSearchParams","filterMovies","get","filter","axios","API_KEY","getTrendingFilms","data","results","q","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}